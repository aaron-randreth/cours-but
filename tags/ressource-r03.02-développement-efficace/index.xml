<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ressource R03.02 - Développement efficace on Cours</title><link>https://aaron-randreth.github.io/tags/ressource-r03.02-d%C3%A9veloppement-efficace/</link><description>Recent content in Ressource R03.02 - Développement efficace on Cours</description><generator>Hugo -- gohugo.io</generator><language>fr</language><lastBuildDate>Tue, 06 Sep 2022 13:59:25 +0200</lastBuildDate><atom:link href="https://aaron-randreth.github.io/tags/ressource-r03.02-d%C3%A9veloppement-efficace/index.xml" rel="self" type="application/rss+xml"/><item><title>Développement efficace - Introduction à la complexité algorithmique</title><link>https://aaron-randreth.github.io/deveffi1/</link><pubDate>Tue, 06 Sep 2022 13:59:25 +0200</pubDate><guid>https://aaron-randreth.github.io/deveffi1/</guid><description>Informations sur le cours Modalités d&amp;rsquo;évaluation 6 séances d&amp;rsquo;amphi, TD, TP Controle de 30min en amphi à la 3éme scéance Un DST Notions étudiées Complexité Arbres Récursivité Tables de hashage Plan Notations Cours La théorie de la complexité C&amp;rsquo;est l&amp;rsquo;étude du temps et de l&amp;rsquo;espace que prend un algorithmique prends pour résoudre un problème, souvant selon le nombre d&amp;rsquo;entrées.
À quoi cela peut servir ?
Comparer les performances de 2 aglos traitant le même pb À savoir si le code est scalable, utilisable sur le big data avec bcp de données Nous fesant abstractions de la puissance de la machine et des optimisations des compilateurs pour se concentrer le coût des actions de l&amp;rsquo;algo en fonctions de n données.</description></item></channel></rss>